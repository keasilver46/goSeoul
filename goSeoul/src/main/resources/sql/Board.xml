<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardns">
	<!-- Use type aliases to avoid typing the full classname every time. <resultMap 
		id="boardResult" type="board"> <result property="num" column="num" /> <result 
		property="writer" column="writer" /> <result property="subject" column="subject" 
		/> <result property="content" column="content" /> <result property="email" 
		column="email" /> <result property="free_hit" column="free_hit" /> <result 
		property="passwd" column="passwd" /> <result property="ref" column="ref" 
		/> <result property="re_step" column="re_step" /> <result property="re_level" 
		column="re_level" /> <result property="ip" column="ip" /> <result property="reg_date" 
		column="reg_date" /> <result property="del" column="del" /> </resultMap> 
		<select id="list" parameterType="hashMap" resultMap="boardResult"> -->

	<select id="list"
		parameterType="org.example.goSeoul.model.Board"
		resultType="org.example.goSeoul.model.Board">
		select * from (select a.*,rowNum rn from (
		select * from free
		<where>
			<if test="keyword != null and search!='subcon'">
				${search} like '%'||#{keyword}||'%'
			</if>
			<if test="keyword != null and search=='subcon'">
				free_title like '%'||#{keyword}||'%' or
				free_content like
				'%'||#{keyword}||'%'
			</if>
		</where>
		order by free_no desc) a )
		where rn between #{startRow} and #{endRow}
	</select>

	<select id="getTotal"
		parameterType="org.example.goSeoul.model.Board" resultType="int">
		select count(*) from free
		<where>
			<if test="keyword != null and search !='subcon'">
				${search} like '%'||#{keyword}||'%'
			</if>
			<if test="keyword != null and search=='subcon'">
				free_title like '%'||#{keyword}||'%' or
				free_content like
				'%'||#{keyword}||'%'
			</if>
		</where>
	</select>

	<select id="select" parameterType="int"
		resultType="org.example.goSeoul.model.Board">
		select * from free where free_no=#{free_no}
	</select>
	
	<select id="getMaxNum" resultType="int">
		select nvl(max(free_no),0) + 1
		from free
	</select>

	<insert id="insert"
		parameterType="org.example.goSeoul.model.Board">
		<selectKey keyProperty="num" order="BEFORE" resultType="int">
			select nvl(max(num),0) + 1 from goseoul
		</selectKey>
		insert into goseoul values (#{free_no},#{writer},#{subject},
		#{content},#{email},0,#{passwd},#{ref},
		#{re_step},#{re_level},#{ip},sysdate,'n')
	</insert>

	<update id="selectUpdate" parameterType="int">
		update free set
		free_hit = free_hit+1 where free_no=#{free_no}
	</update>
	
	<update id="freeLikeUpdate" parameterType="int">
		update free set
		free_like = free_like+1 where free_no=#{free_no}
	</update>
	
	<update id="freeDisikeUpdate" parameterType="int">
		update free set
		free_dislike = free_dislike+1 where free_no=#{free_no}
	</update>
	
	<select id="freeLike" parameterType="int"
		resultType="org.example.goSeoul.model.Board">
		select * from free where free_like=#{free_no}
	</select>
	
	<select id="freeDislike" parameterType="int"
		resultType="org.example.goSeoul.model.Board">
		select * from free where free_dislike=#{free_no}
	</select>
	
	

<!-- 	<update id="update"
		parameterType="org.example.goSeoul.model.Board">
		update goseoul set writer=#{writer},subject=#{subject},
		content=#{content},email=#{email}
		where num=#{free_no}
	</update>

	<update id="delete" parameterType="int">
		update goseoul set del='y'
		where num=#{free_no}
	</update>

	<update id="updateRe"
		parameterType="org.example.goSeoul.model.Board">
		update goseoul set re_step = re_step + 1
		where ref=#{ref} and re_step > #{re_step}
	</update> -->
</mapper>